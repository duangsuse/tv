您不会以为您做过点应用就懂编程语言了吧，天哪，原来我经历的简化重写、结构等效、程序数据化与流前缀，不是脱胎换骨，是某些人学完时兴的Java开发就懂的啊。
您试试拿它计算 `1
+2
*3` ，再算
`"1+
2*3"` 比较下难度。
用后序栈更简单，自己搜；
搜完做个参数值引用，自己搜动态作用域，
这才是基础级入门，
还是我选的。
你搜百度看看哪有资料
别人告诉你和你懂是两码事；狭义和广义的编程是两码事；
Java和Javac是两码事，
不是啥都能触类旁通啊，它不止是超集啊 什么？你说你搜不到，要听现成的？4行的算法都嫌费时间，我告诉您了 `d.copy().update({'a':2})` 您也不懂
那插入、冒泡排序核心也就1行啊，
copy版快排和合并排序也才3行(二分先;与两子先,再合并) 啊，
bitswap和atoi 也1行，默写可以，您来给我解释下都是为啥
算符(+前,后缀)切分的单项 序读取是解析器必要点，
目前我会算符重排栈、
递归深先、下落根重写三种算法，也了解LR左递归优化那一套。 万里长征第0步，
懂了你算会写编译器吗？你连编译前端都不算，前端的输出是按类型处理完命名引用和跳转地址回填的中间表示，
知道啥是闭包和词法域吗？
没有闭包住上级量，许多人和框架的 onclick 都不会工作，
知道2维数组ij咋转化成指针吗，N维呢？什么，你用不到？
接刚才的 以深项先+栈传参、替代AST树不可暂停及带名字地利用栈，
`(\ a b. )` 内是文件级没值语句的列表，其值是生成到单独
[]的代码块，
靠 `(ret 1)` 向上层写入单返回值，
没错，返回值只是个栈地址，
参数是暴露的局部量，
你看过反汇编吗，C语言的调用就是这样。我们每次的工作就是这样，简单~你试试。
而  `(\name x.)= (= name (\ x.) )`、`(f (? q a b) c)= q br.not :b a br :c b c 2:f` ，
我没写多余的，test指令 `qe=0,&ae;ae=-1,iptr` ，
一个if都这么难，
和 `(= var (\` 一样特殊处理 记末位置再回填。
你用 `(q?fa:fb)()`
编译两块代码区分就简单了，可惜性能低
我已经从解析器本质、求值=语法树重写+变量替换 走出这么远，
`;inc=((\ a. (\ b.a+b) ) 1) ;inc 2` 的行为还是不正确，因为它没闭包^。

Babel,Kotlin,TypeScript;Webpack,Proguard ，
我加个清华学历留学科班flag可以像王某人一样
收6k教你什么科学基础，我免费了，
你
嫌便宜，觉得挣不到钱；
我告诉你为啥编译器不卖钱，
要是当程序员有成本，
哪来那么多免费又好用的软件？
计算机是为挣钱赚眼球而生的么？
好好想想，第一台计算机是为科学计算而生； 我们的领域不值钱、世界上第一个网站不要注册客户端弹窗通知，
__因为是它托起你们挣钱的梦想__，视而不见，你们就拿百年不变的烂代码去
骗最终用户去吧
工程界一些人，真的该好好反思下自己的头衔 engineer ，
我们听到『工程』都觉得很美很值得，
改进创新是该做的，复制是避免的。
你觉得你学习，上大学读研为了什么？为了实事，
实事求是待人、实事求是做事，就是这样。
但很多人上大学为读研、读研为工作挣钱扎根北上广，
励志吗？还好，
但‘好’这个字
从来不在他们的目标里，只在个人里。
互相尊重。我们是做事的，不是打架的。
打架别扯本职工作外的内容。 什么友商友商的，什么人之常情，就是虚伪。何必呢？
回去看了下他的标题竟然还是反问句，我tm…
是的是的都对，但您，没有发这个视频资格，没有在您其他视频下拉它流量的资格，
更没有随意删技术评论拉黑人的资格。
__您评论区随您，我倒要看看B站和B友随不随您__
__请您立刻删除那期视频。
LH的视频和网易课有心学的人搜不到？需要你“搬运”？__
编程语言是配角，某位程序员是配角，
但你要说他们廉价，看我不喷死你
一天搞懂，那你培训一年是不是就能当Native编译器前后端资深研发工程师，
进入那个华为拿百万年薪了啊；我告诉你，你想得美。
想当知识暴发户，你做梦就好。
两个小贩互买零食1块钱就能交换完彼此库存，
钱和资源价值上可动的手脚太多了，
技术怕吃苦，那你慢慢等开窍吧。
我们这个领域消掉信息差，
告诉你读输入是字符流、
递归下降法也能当分词、树遍历，把成员访问调用变量变成值，处理条件性求值，
乃至
函参何时求值
和嵌套作用域，
与参数靠栈上位去传 四则本质是函数 等事实 ，
不要害怕、过度强调二进制格式和cmd参数,
元编程,
std API这些无关的；那还是解释器
我告诉你函数是值、能作参数，回调函数只是
调用方不在自己代码内 调用了，没有本质不同，
告诉你闭包和对象区别只在有无类型名，举例子教(iterStop,asyncTask,event注册)，你真接受可能都要一天
__不会吧不会吧，不会真
有人把没见过当不存在吧。__ 不会还在用百度吧，用Bing啊
因为很多人并不是会「编程」，
而是会按他从网上、
从老师那看到实例的模式，
去改了代码拼在一起，
出错了猜着重试；
他不知道 __什么不是必须的、什么可以换、什么是为了背后的什么__，
因为他看到的只是眼下的『代码文本』
“printf语法”
“cout<<语法”
运行出啥效果，
关心的没有示例数据与环境，和成百上千的使用设备里成百上千次执行。
并不是说我们得害怕不可控性，
而是得尽量写
好，写得优雅易懂易维护。
栈是啥，存变量的地方嘛。
字符串是0结尾ASCII码表数组，
除了这些呢，还知道什么？还能怎么用。__什么应该简化，什么可以再看细节__，
性能上什么优
缺点；
现在这不基础，但不基本吗。
就是一个人不落入 yacc/peg,
token[]与tokVal, substr +-*/,
LR左递归;难判断语法树,冗长命名,过早优化
等全部拉扯和坑比较多的做法，
他从0做一个高级计算器也要两天，
要是网学就要一周，因为本领域废话水平可不低。
您吹牛逼是直接捡最硬核的蹭了，
您口中的简化编译器的源语
言，
该是C语言的子集吧，
因为您对编译器一词根本莫得概念。
先看看自己地址空间的指针和size_t,long转int[]学会、gdb条件断点用过了没！
你要是再支持DCE,CSE等 等效优化，
bfs dijkstra 算法都不会写，可没人帮你想啊。
看过 _The Little
Schemer_ ，它
不提文本解析器和let赋值 就三
单项、调用括号的求值重写、
参数-subst ，
和 yinwang.org 博客一样，
我第一次看都完全看不懂，
现在我觉得是最优雅最灵魂的教程，
你试试。
__极简不是对现有体系的否定，它只是做它更看重的精力配比__。
要是你拿它当捷径、
当无知的道理，我告诉你，__三脚猫的心走哪条路都是三脚猫__，
也就开始让能你飘几秒，人易我易 没球用。
Kotlin泛型推导也容易，你设计下试试。
你可能不知道初学者会为层叠 `Map<K,V>` K遮盖恢复的实现举出 `scope=old.copy+vars; List<M>, M<K,List<V>> , M<Int,V> ,M+Stack<M>`
或对或错的实现，是因为我们傻吗？
呵，是因为我们在追逐真知，
__为了追求干的傻事，
不可笑；
战士为不辱使命伤残，是荣誉。__
至于我自己的心得，我不会在视频里说。
这次和大家分享已经是特例，真的是对某杂谈这种投机取巧营销号非常无语。
那有句话，
你要跟火箭发动机工程师说火箭不能烧汽油，得用最好的那种柴油，他正眼看你一眼算他输。
不错，我输了，
但正是因为我只重视我所热爱的事，
才不
计较这些形式。
凭什么原理就得硬核？只要你想学理应人人都能懂！
__你呢。你删我科普评论的时候，重视的是什么呢。
自相矛盾。__
__从1到2 是1，从0到1 无限大__，
不要小看这个1 ，它不是你轻轻松松在百度 搜个一两天能明白的。
做事要奇，做人要正。踏踏实实。
开闭口革命更新，打破这个颠覆那个，
请问您在哪里培训了几天，有何实践经验？ Talk is cheap, show me code.
本来我说 __程序员鱼皮__ 虽然不了解情况，但待人还算客气
好吧，
虽然他
上来啥都不看，先入为主觉得我是吹牛、自我陶醉。
__中国人自谦是为了自警，不是为让无关人啊指指点点__
是不是因为我用户名没标「程序员」右下也没小闪电就觉得我菜。那 Linus@kernel.org 也没有啊，
是B站都没呢，也没微信QQ啊，靠发电子邮件工作。 他名字不含程序员，为啥大家都知道他是程序员呢？
你以为事无巨细平铺穷举就叫易读，一五
一
十原汁原味就叫易懂， 阿Q正传一句批判没有，为啥说是讽刺呢；
我80%的篇幅都无关你俩，但依然是在敲
你俩。
来源情况很多，目标都是成果
当时安慰自己，他也就是编程玩玩呗，拍视频有娱乐价值，不爱看给删了，必须接受；我不对玩笑过敏
不回头看不知道，
呵，遮掩几天，他居然也给我拉黑了 mo?
我说过你不爱听我再不评论也做到了啊，需要您拉黑吗，多大仇啊？
您的视频我可都是点赞投币过的啊，__跟你风抱怨几句你自己还看不惯了__，银电视up就是这么宠粉的，
结合我之前第一次被撕的经历，
真是让我不敢和BAT大厂的天骄们交流了。
那我是说了什么耸人听闻的事情呢，
和这个什么一样，
在我初中就开始用的 Linux 做了个小总结，
这有
啥
了不起这是爱好啊？
也
有个小建议，这算是友善行为吧？后来给我禁言了。
并不是菜就没有做事的理由，
而是 __菜而不自信，让别人心烦。__
位置是相对的，运动是绝对的。
今天你轻蔑嘲笑的人，可能一年后莫名其妙就超过了你；也有无数人，甚至天资已经在你前面；比烂，没有丝毫意义，
难道我们的追求的是新知识，
死盯的却是抱着同样求知欲的人，羡慕的眼神吗？
真的好好笑欸，
比你强的人看不见，专对比你弱的人装硬。好好的交流搅得跟宫斗一样，
才写两行代码就比别人尊贵了，您把写码当修真动漫 动不动进化天尊呢。
中国某些公司的程序员，
啊真的素质普遍垃圾
每个人都可以好好挣钱，
啊说什么资深 深
入 精通，懂的都懂，真真假假。但包装自己 恰饭不尊重自己恰的人群 ，删评论，你还知道自己在做不光彩的事怕人说啊，
那你别做啊。
尊重。尊重对方的领域、
尊重对方的爱好、
尊重对方的用心，
尊重自己有不了解的领域的事实，
也尊重自己领域内不同的人。
现在越来越多的人会对底层原理感兴趣，虽然相关的视频质量七七八八，
但为探寻真知敢于触碰这些别人说很难的东西，
这种勇气是值得嘉奖的，
只要，
唉你尊重相关的群体，不要拿他们的心血当空气。 玩笑
可以开，
删评拉黑你可悠着点，
别以为学的不流行人都好欺负。
不会真的有人不复制编程…… 不
好意思，我就是。
因为娱乐性就可以随便删？试试看大家接不接受。
不会因为社会的尊重、社区的友好，
要出国的人就回来；
但哪怕多留一人，对中国而言都是种新的可能，
对领域而言都是位新的底气；
__强大不是靠嘴说出来的，
强大是靠人合起来的__。
就像数学和基础物理，
我们可以不用，但不能没有
不自信，那他们就没有自尊吗？
__有自尊，
但在自尊的同时也自卑着。__
因为自卑，所以看不得别人好；
因为自卑，所以害怕正视自己的菜；
但有个问题啊，
我是在炫富拉仇恨吗？
难道我们这类人就没有平等交流的资格了吗？
如果没有，__你们也没有发现更多渠道、更多社区的资格__，
社区里的人只是因为意愿而交流分享，
有party也有吵吵闹闹，
大家只是因为相同的爱好聚首，
没有金钱利益你高我低和流量，
只有每个个体基于他见闻的看法和建议；发自真心，归于真心
人跟人隔座山，
但正是因为讨厌这些我才会关注你，
__不是你不配，而是爱好
根本没有配不配！__
自由对待知识，本来是所有人的权利，
你可以不要，但无权劣化环境
科学就是科学，不要拿一些庸俗的眼光
和度量衡对他人妄加判断。
收你各种手续费传你1/10的人你抱得像宝，
向你敞开一切过去主动来帮的人你说自以为是，
我就是太贱
今天的我很贵，
我4段代码开源，
但你们贴不起谢谢 你敦促了我，与你无关；我收的不是钱和谬赞，是你们的同理心，
欸怎么在某人的做法里我连撇点钩都没看到
__择趣求知是我对技术的信仰，平等待人是我对交流的信仰__。
我从不把一些人最爱计较的你高我低带入代码的世界，我不无故复制，一切本着科学的精神，看度量指标说话；用事实说话
在技术的世界里，我比人弱，也比某些人强；我每句话前都有检讨自己有没有傲慢、有没有自卑，但
对那些拿技术当把戏耍的人，我可管不住自己的大嘴
人有两只眼睛，一只前瞻一只顾后；一只用来看见，一只用来欣赏。遮住一只会怎么样。
我看到过几十个比我厉害的人，或许10年之后我也赶不上他们的脚步，
但我发自内心地尊重和欣赏他们，
能和他们平等对话，也看得见和他们比，自己独有的闪光点。我弱，但我不自卑；我说大话，但都是事实；
我不聪明，初高中倒数第一，但不因此全盘否定自己，
因为我知道，
__不是聪明的人一定赢，
而是失去自我的人
赢也输__；我不励志，我只做眼下的事
我骄傲不是为自己成绩差，不是为我特立独行，
而是为完整认识了自己。 你呢
你可以伪装外国的技术是自己原创拿来怎样，但他强，他就在那。 他可以不说话，但压迫感就在那，
不管你怎么泼脏水、骂是技术霸凌、
装B、垄断
事实不会因为你的情绪有任何挪动，
拜托，
__你有权菜，只是不要那么敌视平等交流__，
毁了你自以为的大厂另辟蹊径flag，
我不求你什么人格尊重、和平相处，至少尊重我码的字、
尊重我对科普的热爱，好吗？我只是玩玩，我无所谓，你那么认真干嘛
。。那我也只是玩玩，你别和我争，开开心心好过一天就行了
之前，我说许多原理级技术人甘于卑微、乐于分享；
他们为啥要这样呢
或许只是因为乐于分享，才有这样的他们吧。
无关自豪或流行,毕竟，教学半。
只有一切既得的东西都满足不了你，
才会有觉悟去寻找属于自己的方法，
追寻更多可能吧
只有一
切虚浮的表象都不让你安心，才会离开安全区，
向远方进发。或许在有人看来你已相当富有，但诱惑着你的并不是某
一刻的
远方，
只
是远方而已
因为已经满了的人，
在自认最高的那一刻，
趋势就为0了；就像熟透的果实，
满了，
该走向衰败了
毕竟运动是绝对的，
静止只是相对主观的 ；
如果你是真想知道更多，从「我最聪明」里跳出来吧
自尊很重要，
但只有为技术抛弃盲目自信，
才能真正收获自尊。
在无数次奔跑过后，
你不再关心 旁人眼中晨曦里的远方 会是什么颜色，
只是不断地，
把它变成近在咫尺的真实
别卡死在一个目标上。
Don't block! Keep moving
