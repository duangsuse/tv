<!doctype html><script>n=o=>o.length,ss=s=>s.split(' '), newA=(N,f)=>{let a=[],i=0;for(;i<N;i++)a[i]=f(i) ;return a}
with(Math){DEG=2*PI,转=(r,f)=>f(sin(r),cos(r)), SAW=[floor,round,ceil],LUB=[min,max]}//自上向右转

Defs=()=>{JSType(`VecN`,`constructor(a,i,i1){this.a=a,this.i=i,this.i1=i1}get dup(){let{a,i,i1}=this;return new this.constructor(a.slice(i,i1),0,i1-i)}`,
"f(op) pk(k) v(b)",[`op(a[i])`,`k*a[i]`,`b[n(b)-(i1-i)]`],//fJ,fj for dot,min? limit
x=>`{let{a,i,i1}=this;for(;i<i1;i++)a[i]=${x} ;return this}`)
//^ boring or slow.?
let kfn=ss(`+ * - / p pp m mm`),
df=(_k,cp)=>{let k=ss(_k),N=n(k[0]), cg=op=>i=>`a[i+${i}]${op}=b[I+${i}]`,
cgP=([...ch])=>ch.map((x,i)=>[`o.a[${i}]`,`o.a[${i}]=v`]),
fn=kfn.map((x,i)=>i<4?"": x+`(v){let{a,i}=this,I=v.i,b=v.a;${newA(N,cg(kfn[i-4])).join()}  ;return this}`).join("")
; eval(`VecN[${N}]=class Vec${N} extends VecN{${fn}
${jsProp(`let o=this;`,k.join(""),k.flatMap(cgP))}
${cp?jsProp(`let o=this,{x,y}=o;`,...cp):""}}`)
}
df('x');df('xy',['lr',[[`Math.sqrt(x*x+y*y)`,`o.l_1.pk(v)`],[`Math.atan2(x,y)`,`转(v,(X,Y)=>o.v([x*X+y*Y,x*Y-y*X]))`]] ])
defGet(VecN[2],{l_1:o=>o.pk(1/o.l)})
df('xyz RGB');df('RGBA')//Vec1~4
let f=o=>V(o.width,o.height)
VecN.wh=o=>o.width?f(o):f(o.getClientRects()[0])
}
jsProp=(Pre,[...k],cod)=>k.reduce((c,K,i)=>(([G,S])=>c+`get ${K}(){${Pre}return ${G}}set ${K}(v){${Pre+S}}`)(cod[i]) ,"")
JSType=(k,cod, kf,s,sf)=>eval(`this.${k}=class ${k}{${cod} ${ss(kf).map((k,i)=>k+sf(s[i])).join("")}}`)
defGet=(T,c)=>{for(let k in c)T.prototype.__defineGetter__(k,function(){return c[k](this)})}

Defs()
pmix=(a,b,t)=>a.dup.p(b.dup.m(a).pk(t))
V=(...a)=>new VecN[n(a)](a,0,n(a))
Vn=(N,v=1)=>new VecN[N](Array(N).fill(v),0,N)
Va=dims=>a=>{let N=0,I=[],x;for(x of dims)I.push(N,N+=x)
  a=a.at?a:Array(N*a);return(id,f)=>chunk(I, (i,i1)=>new VecN[i1-i](a,N*id+i,N*id+i1))
}
chunk=(a,f)=>{let b=[],i=0,i1;for(;i<n(a);i=i1)b.push(f(...a.slice(i,i1=i+n(f))) ) ;return b}

T1=Va([1,2])(2)
newA(2,i=>T1(i)[1].v([i,i*2]).pk(3)&T1(i)[0].v([-i]) )

console.log(T1(0)[0].a)
</script>
<canvas id=eG></canvas><input type=number id=l><input type=number step=.05 id=r>
<script>
布=e=>{e.width=e.offsetWidth;e.height=e.offsetHeight;return e.getContext("2d")}
eG.style.cssText=`width:100vw;height:100vh`
G=布(eG);L=VecN.wh(eG)

eG.onclick=({x,y})=>{
  G.moveTo(0,L.y);G.lineTo(x,y);G.stroke()
  let p=V(x,L.y-y), df=(e,k)=>{e.value=p[k]; e.onchange=()=>{p[k]=e.value; G.fillRect(p.x,L.y-p.y ,2,2)} }
  df(l,'l');df(r,'r')
}

shad=f=>{let{x:w,y:h}=L,A=new Uint8ClampedArray(4*w*h),a=Va([4])(A) ,y,x,P=V(0,0),i=0
for(y=0;y<h;y++)for(x=0;x<w;x++,i++)f(a(i)[0],P.v([x,y]))
console.log(A)
G.putImageData(new ImageData(A,w,h), 0,0)
}
shad((b,p)=>{p.mm(L);
b.v(V(p.x,p.y,p.x).p(V(0,2,4)).f(Math.cos).pk(256).p(Vn(3,.5)).a)
})


</script>
<style>*{margin:0}</style>
