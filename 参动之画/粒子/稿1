Hello everybody!
几个星期没见了，大家想我吗？好了，这期视频谈一下「粒子动画」，是指对随机生成的散点进行相同的操作，令其绘制参数平滑渐变

大概是先看下这些有配置面板可调的动画是咋实现的，然后科普一点技巧，最后是致敬@flashaxe 的仿造向量动画；其实说白了都是三四行，但实际代码毕竟不可能只有公式

点赞过百我会彻底重写，并且全加到一起，弄成壁纸引擎那种体量；点赞过50就算了，其实我还有别的在写，偷个懒呗

我实现了 blok 圆球,bloky 闪烁方块,dot 圆点折线,d4 四边形,fall 弓形下落,morph 经典形变 6种动画，每种粒子数量、时长、区间速率都可调，

圆球就是数组里保存的透明度 变了一下，这有个态0式 意思就是说隔几秒或几次 可以变到一个固定状态，比如全红或全透明，比永远随机养眼，当然粒子的CSS颜色啥都可以调；因为是边角功能就搁置了，点赞破百做

方块在计算上，你会发现每个的透明度都是连续的，一定是从淡到深到淡，而不是乱闪，有个方块游戏叫生存战争 它的主界面就是这个动画；实现为简单的累加，然后取余数

余数，数学称为模意义运算， a%1 <1 ，且随a增加，结果像 0.8 .9 0 .1 这样循环往复；余数可以在只有1变量的情况下存储2维数组座标i=p/m,j=p%m，或实现区间内往复i%10与往返(i/10&1==1?i%10: 10-i%10 ,&1即2余数)，在打程序流程的草稿时，可以用于循环滚动啊这些

圆点折线，每点的xy横纵位置都是0~w,0~h 里随机选的，rk(a,b)=a+(b-a)*random() ，点的补间其实就是xy各自补间，这点和Vec2里的角度由00~x,y定义一样，我把 [[x=1,y=2], [3,3]].flat()变成Array(4) 再有 chunks(2,(i,x,y)=> 各自插值、组合相邻，定期重绘即可

d4四边形，这个效果看起来不太好，和xy.flat()一样是各自补间再汇总，只是单点有4个数xywh

然后是关于这个补间的 anim(v0,v1,dur, f) 函数，通过 .rep(1,onDone?,stoper?) 播放1遍，dur 和起始位置、缓动函数是可调的；v0,v1 可以是 0,100 也可以是俩数组，因为代码量低就顺便支持了下；动画是可以打断并反向rep(0) 的 还能空降播放时间；这个的实现也比较密集，因为没啥有意思的 照本宣科；但如果更新，我会支持 Bezier 可视化编辑与速率线混搭，就能做弹球式动画了，我想也能辅助更多类型的场景动画

fall ，还有一个没说的 circ 这俩有点特殊，因为它们的每状态不是全随机，是由正余弦-圆上点公式 t=0~2PI xsint,ycost 和SVG矢量图点路径决定的，也就是说生成式有一个更大的分回合参数，利用函数值这不困难： circ(xyr)=圆点集 是固定的，而 f=step(1,10, i=>circ(xy,r=i)) ，后每次调f()都求得r增的圆点集，而如果提供的就是 circ(50,50,r=25) 而非函数值，直接用就好了；你可以说通过Iterator迭代器会有更规范，但这种方法能避免给可配置性增加心态负担

(音画不同步)最后morph，允许手绘这个 是记录旧点x0y0 lineTo(x1y1) stroke()画线，也就6行代码，顺带记录下落-抬笔间 x0y0列表，然后和dot一样逐点渐变，新状态是用户刚画的或 内置SVG getPointAtLen(dt+=totalLen/N) 矢量图细分的

(无画面)这个下落 粒子生成式 改一下y=画布高+增速度 然后绘制Math.max(画布高,y) 其实就相当于基于向量 下落速有别~碰屏幕四边巡回 的粒子的，基于Vec2(xy)累加的动画它更实时一些，普通的值补间适用可确定播放模式的情况

anim基本上实现了CSS动画，除了 0%~to 的分属性关键帧；当然递推也能补齐关键帧状态 变作多个anim

然后是致敬flashaxe君的几个动画，先上自己的

我们把文本逐字切成能动画其位置、大小的元素，利用CSS动画模糊放大、fill:forwards保留末态，还原时反向播放。
单靠CSS实现不了随机淡出方向，以及逐字播放，所以transform:translate(var(x),y 和e.style.setProp_ 来为每个e元素随机选点；而 onanimateend 时右项添加CSS类，就可以逐项播放了。不过反向时要先去掉既有的动画末态，再反着来一遍


这个做的比较失败，你可以猜猜我在仿造哪一期；本来应该是 canvas 在鼠标点画黑圆，清背景时靠半透明遮住旧点 直至全白，我是把半透明做在圆上、不清空背景了，然后 CSS mask: toDataURL() 再删掉画布，透明度蒙版，暴露后面clip-path出的六角形；总之就是用CSS辅助绘制结果失败了，按理CSS也不是用来画背景图的

粒子线的也没配好色，最开始想做鼠标干涉也没弄；其实和上面圆点折线差不多，位置都是随机的，但每点的角方向始终固定，画圆之前先遍历其他点(i>自己,<的最近点=自己则已连)，找到最近1项连个线；不过flash的做法是找最近3项连线这样，我们知道编程时1和N 个解代码量差别很大，所以只在大致仿造了下

关于粒子选点呢，每区间的概率不该平齐，其实应该是按簇去选的，比如长得像3角形、5角星的粒子集有没有？
关于鼠标干涉呢，是可以onmousemove 去侧时差，算角和速度，然后鼠标下一个矩区 按干涉位图-中间黑的圆渐变 施加这个力

最后文本粒子，我是模拟不好这个重力，次方性质的嘛，抛物线。每点增 重力加速度是G 每轮加一点，直到最大速度

这个文本网格化，就是把它的矩区切成宽ww=measureText高hh=parseInt(font) 的小矩形粒子，上色小矩形 我是按左上角透明度!=0 则随机 否则空，下落的计算刚说了，结果还是按 xyc 位置颜色fillRect 就好了

谈理论什么都是简单的，可编程最难的，不正是脚踏实地 放置好每个步骤、思量好每个参数吗？浏览器REPL 给了我们方便的测试的环境，可作为优秀的程序员，不能面向查错编程，更要敢于敲字啊！

结尾再说一句，其实B站虽然大家认为是流量平台，我也见到偏向不同的真·牛人，嵌入式啊、UI和工程啊、图形学、操作系统啊，并不是技术高粉丝量就低，也并不是粉丝高技术乃至人品就好；他们最共同的一点是不管别人怎样，都持之以恒地在做自己热爱的事，这份认真带给他们比爱好或特长更充实的东西，不止在学习 什么快乐学习，这已经是生活本身，谈不上热爱，只是一直在干

我觉得成熟的一个标杆是，分清楚 自己喜欢的、流行的、高质量的、用心的 都不是一回事，也没那么多高高下下；并不是学院派的东西就真是仅精英，也不是『干货』就有用『古董』就无潜力，许多东西都会有两种视角，没有视角是低等；科学何尝不是如此呢，为什么要在乎目的不同的人的看法，如果不是为相同的真理

信仰得很绝对是好事，但遇到矛盾点就容易反应过度，就像罗翔说的那样，见得越少越有莫名其妙的好辩和胜负欲，无论是小白、菜鸡还是大佬，在这点上是雷同的。其实编程也就图个一乐，如果你感到它令人烦躁，关注我吧。或许慢慢会发现它不一样的侧面，尽管我什么也不能保证

flashaxe是up主里面我见过js画图最多的，粉丝也比较多 虽然没几个评论，这也是领域的通病，当然命令行、Scratch、PyTurtle 也能画，但我觉得打开浏览器就能画，作品这么多还是第一次见

当然他也有小缺点，就是没有太重视代码的复用，他的每期视频都是从html 开始写的，我觉得一些通用代码，比如 newA(n,f)={a=[],i=0;for(;i<n;i++)a[i]=f(i) ;return a} 后 newA(3,i=>2*i)=[0,2,4] 这些都可以放一个基础网页里；没必要像npm那么冗，但不统一 首先是改配置不便，然后不容易看出通用的代码片段 来变成函数，有些局限代码的更大用途

然后就是录屏剪辑有加字幕，但没有提纲；我觉得这个粉丝量是可以考虑下先写个原理概况的，包括我最先几期也有发提纲，当然我现在没了，从评论区能看出他很清楚原理，但如果能说得秒懂一点，才能彰显出原创和营销号的本质区别；代码梗概其实也是一种锤炼，并不是智商高就能说得清晰有序，这需要练习；从营销号手里争流量，我们不能认输啊

过几天我还有圣诞树和考试系统要发，祝大家新年快乐
