Live2D 最近很流行。我们来分析下实现它必须的技术：给你一个正常的手臂贴图和一个扭点，怎么扭曲它

开始我想出一个词『干涉地图』，类似 mask 一样是等宽高的方阵；要扭曲一个图的确对它的像素区块要干扰，可要以什么方式干扰？

工欲善其事，必先知其据；我们弄一个渐变彩条，现在要扭曲它，假设是成这样，注意是平滑曲线不是真折线

它的矩形区域的宽度，变大了；那两个矩区有啥对应关系呢？

我发现可以把彩条y方向，细分为10个、100个矩形，扭点都包含在内，而扭点里我们实际要补间两点 -90度 的左右更改区，

我们知道JOJO里空调徐纶的身体是由线构成的，可不可以把两个矩形每个x位置的点一一对应，画上渐变色直线？
暂时先不说具体操作，然后位图直线里点的迭代有算法

当细分矩形越来越多，直到高度为1变成一条线，扭点的贴图就真正平滑了；不过这有个问题

随着细分变多，我们补间两点的数据窗口会缩小、效果和性能都会变差

那可不可以干脆直接把整条线x位置，变成平滑曲线，靠这种方式对应y轴？不行，扭点色彩的密集度是有区别的，这样如果你在处理(y斑马线)，它会错开成两个竖杠


我们先声明一点，算法最终处理的是折线，所以不考虑平滑到散点的问题

然后针对扭点，我们是应该把相同x位置连线，还是连弧线？那就是 `arcPs(p0, A,B)` 圆心和AB两点间弧线点，可以利用三角函数算

最终我们把每个x的中间点收集起来 `xP=[ys0,ys1,...]` 还有扭点前后行的色值 `xCv=[["red","blue"], ...]`

利用渐变色对 `xP[x][i]=y, color=时位(xCv,i)` 进行补间；我们看这个扇形效果还可以

扭点正角度的那面，不是缺色而是色重了，要进行概括处理，我称为减补间

两个矩形重叠的部分，用x斑马线测试；实际也是拿有重叠扇形区拼一起，把它减小一半，但这个扇区右边是直线 数据窗口不完整，复制像素时直接忽略透明点就好了


最后比较整体的晃动怎么做呢，把大图分成许多小块，每个端点移动就更新四周的3D畸变，看起来就像图片被扰动到了

可以用一横排三个点模拟刚才的算法，它和骨架线是有区别的，类似第一个连线插值 没有考虑扭点方向；比较适合做重力的效果
