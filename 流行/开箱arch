什么时候这些大佬才明白编程语言不是由『关键字』char构成的，它最需要接受的是惯用法优化，是句子
甲方乙方
64+4g
嵌入式单片
盗版win 预装.恢复win
粒子动画

访问键都没绑，esc不能用

先zip一下再发送呢、中断位置
.助手 播放键read主被动
.3s瞬时速度
哔哔里里

fennix,swap,grub-inst ,20G
root uuid,lab,/dev; resume
sys dev:pm proc runtmp

winsxs,woW64
msHta,
Shift-F10 cd oobe; msoobe
删除所有 windows/wuapi
ntldr不支持ssd 255的磁头数，不安装？
sys32/pecmd.ini ,winPEshl ,wpeutil ，是bcd配置的掉电丢失内存C=X盘ramdisk
Winboot利用sys32/drivers/wof遮罩文件系统 *在VolInfo/_.dat可查，没有改的从wim懒解压，官文：先conv再extract 可压缩安装保留修改，理论上改盘标都行，但 dism 会校验来源wim支持wimboot的标
这个每次 reg add HKLM/..NT/CurrentVersion/AutoLogonSID 和其 .WinPE_001 domain ，用户配置 分辨率啊都变，因为system账户explorer微软在8pe版加限制了，想不重复创建，组策略啥常用ui都删了，net user /add,netplwiz 也没用（毕竟是pe），奈何我不是系管，搜到些链接最后也只能放弃
我才注意到wbmgr 配置好后根本不需要 wimboot,compact,vhd 等方式安装winpe

于是我很普通7z解压了wim，结合原本的bcd引导windir ，没有压缩,ramdisk 现在pe的更改也能保存了，默认system账户，改掉原本的pecmd.ini里创建图标链接、自启动、网络配置.加行disp，然后弄个好看的主题保存了 删掉自带的，AppData/R_/MS/Win/Start 删掉多余链接，看起来就像真的安装了一样，其实只是带ux外壳的硬盘预安装环境，不支持msi只能上绿色版，兼容性比wine好
非标准的做法，但灵活 不需要下4G的镜像，相当于linux squashfs，如果结合wim还能实现btrfs快照功能
随便找个，老毛桃大白菜的国内下载，和ghost一样不用担心安不上无限重启的问题，它们也都带utraliso,wimtool,bcdtool这些图形化工具，利用官方bootmgr/efi在ntfs上引导 非常方便，适合哪种只要办公软件(ff,wps亲测能用)的需求
启动的东西太少了，感觉回到win98时代，不过在盛行混合睡眠的几天开机快没啥意义。

winpe的wimboot和windows是可以共存，甚至用同一个windir的，只要解压了bcd加项引导，软件都能共享，比较类似带窗口外壳的winre ，re是只能脚本诊断或启动cmd的，现在win10都有 可以自动还原(我估计还是从winsxs或wusa联网装

win的设计其实很巧妙，但也比linux更作些，比如grub就适配了很多系统依然是基于文本，bcd是用途极少但基于注册表，软件也没有包管理器 基于nsis而且爱重启，它的iis和domain网络服务我也是觉得就它家用了
posix在内核上我觉得比dos分盘的做法优雅，从文件系统和嵌入式支持上也可以看出这比win利于配置，但各种rc文件弄的也烦，而win就很有潜质，powershell 的设计延续了win的非文本之路，这挺好的，就像诊断工具本身也是脚本，加个界面不比纯命令行更有价值、更考验复用？可是linux界面有特色的除了kde,yast,compiz ，真的不多
这次了解了win自vista以来的部署映像技术，填补了之前靠 SysmanTec Ghost 的空缺，和livecd的squashfs一样成熟，颠覆了我对微软只想赚钱的看法，其实微软也发布了很多免费工具和开源软件，比如 VSCode Monaco ，真的不该叫Windows公司
随身听等广泛应用FAT文件系统，wav声音 bmp,ico图像，这些最通用的无压缩格式都是MS的作品
rndis驱动可能是版本老 设备ID不对，也没有32位win8的inf，注册了不会默认对它启用
输入法用rime,qq17版是不行的，击键根本注册不上，各种五笔和 unispIM,rrpy 等个人制老API输入，当然微软智能拼音也行
注册表读写有问题，安装.ime文件后还要开机在ctfmon.exe启动前用注册程序,regsvr32的，总之深刻让我认识到技术的无力，运维系统定制水也深呐……
最理想的其实是用按键精灵或者 regscan、procmon检查，重新执行命令，但那很折腾

NAT让主机拥有 虚拟机 ip a 的地址，在虚拟机面板设置网关为 ip r 的首项，无需端口转发即可ssh root@虚拟机

docker容器化服务越来越零散飘逸，opt root var etc位置都混乱， create -v a:b 都是绝对路径，还不写 $PWD/a
ll /etc/`pidof java`/fd 能查看stdio 。centos LVM存储不足可到 Cockpit,LuCI YaST 等面板添加卷组扩容，Docker也能管理


Win10 更新时自动改写UEFI设置，但文件没删，害得我找了很久如何回Arch… 没有U盘和DriveDroid/Mountr来直接裸机启动，干脆让VBox挂载整个硬盘，用archiso再 chroot `mount boot; bootctl install` 下好了

VBox 只需创建 `VBoxManage internalcommands createrawvmdk -filename a.vmdk -rawdisk /dev/sdb` (`usermod -a -G disk vbox` 才能读写sdX盘)

rawdisk 如 `\\.\PhysicalDrive0` 可用 `wmic DISKDRIVE GET INDEX,SIGNATURE` 取(话说 VHD 可直接在 diskmgmt.msc 挂载)

但 Win,OSX 下(cd \Program Files\Oracle 需)会有占用和禁止访问的特技，ACHI和NVMe都没办法进行任何修改，如果没管理员权限连读都不让！

幸好 EFI 下 wbmgr 是可以 chainload Linux内核的，`bcdboot /set "{bootmgr}" \EFI\BOOT\bootx64.efi ` 可修改(BIOS菜单项?)

缺失.efi可用 `cp /usr/lib/systemd/boot/efi/$f /boot/efi/BOOT/`

shutdown /r /o 高级重新启动，可以选择其他设备

查看 $esp 可用 diskpart `select partition 1; ass`(ign letter) 后 `taskkill /f /im expoler.exe` 并在taskmgr以管理员重启(Win8+不行了)


mvn POM 里相对路径不用 <systemPath> ${basedir} ，SQL 类似int(3) 括号时常报错。Tomcat WEB-INF/lib 可能冲突，NoClassDef 时要增改服务器的libs？ 千万别。 重命名冲突jar，-api域为provided(即用全局库)即可编译 避免踩坑许多finally{}吃异常、线程run()假死的连接库
nio.CancelledKeyException 是客户端obj失效 偶发卡线程，需更新版连接库

#Blender 打开模板 VFX 看页2D anim ,座标泡 点Z轴 进入XY平面。拖视频进去
o= C.scene.camera
o.location=o.rotation_euler=Vector((0,0,0))
o= C.object; o.empty_display_size=1
C.scene.frame_end=o.image_user.frame_duration =o.data.frame_duration #RNA data

是删建相机，按G平移，物体属性z轴升高先 小键盘0看着摄像机 对齐视频面，左下角放空物体轴浮标

看页Motion 再拖一遍视频，添加浮标记 Ctrl T 跟踪、跟丢了拖回来继续。 打标一般朝颜色斜交接处，不转只放大。嫌慢匹配-上一帧
完后 解算-几何数据-将空物体链接轨迹，物属关系 选左下浮标0点

看页Composite ，使用节点，Shift A 椭圆遮罩 、输出-预览 ，右键给遮罩XY加驱动器，=var,对应Track 局部空间 X,Y位置 ；然后y要/宽高比 (横屏率) ，就能预览到xywh方框了
如果需要 G'MIC,Shadertoy 滤镜(比如鱼眼扭曲)则需要专门的 Natron 混成软件，但后者动追起来很麻烦，我们可以导入Blender 的xy% 函数线，dx=1的采样率默认一致 。先跟踪轨迹-到曲线图，选中动画轨

df=[[p.co[1]for p in f.keyframe_points ] for f in C.object.animation_data.action.fcurves]
open("/tmp/Bfx","w+").write("\n".join(" ".join(map(str,v))for v in zip(*df) ) ) #D.image[].size

加特效给 Center点 Set Key 在Curve图编辑, 再 Set Expr (Node的信息API 乱得令人发指，干脆短写)
(lambda i:thisParam.get()[i]*[720,1280][i]) (dimension)
i=dimension;return thisParam.get()[i]*[1280,720][i]

你可以右键创建新参数页面，用Ctrl+拖拽 写算式 来偏移跟踪点啥的，写语句要开Multi-line 。但总体来说脚本处理甚至宏 还是很有效的

播放按钮左自动插帧 点选属性，悬停 记下快捷键，当然可以只含插帧集内 动成函数线。
BUI Area 右/上角 一般能调吸附和选区,光标模式, T开(视图)工具栏。滚动条对触摸板用户不友好 要多摸索菜单
Space 里有 Context-Panel 用ops编辑(快捷键和撤销历史)，而Workspace-Area 排版这些，原理参考 ui_panel menu tool ，鼠标事件拖拽 operator_modal ，3D对象叫 gizmo
import bpy 有选区Ctx和数据Data ，types ops msgbus 暴露操作监听，utils app 脚本版本 其他太通用。ops是基于select=True 的半全局传参

VSE的字幕与图片功能还不完善，特效调整点[添加]，工作流规范时影响不大

https://github.com/10Dev/Blender3D/blob/master/source/blender/editors/space_image/image_ops.c#L1493  Image edit项由其im或SpaceIm确定

bpy.ops.image.match_movie_length({ "region":C.screen.areas[0].regions[2]})
o=C.object; o.empty_display_size=1
C.scene.frame_end=o.image_user.frame_duration

pacaur -S kdenlive rubberband pitivi gst-libav
pacaur -S glibc gcc#-libs


IME

Powsh 里列表处理.属性名 就成，UNIX `awk '{if(NR==1){print $3}}'` 不至于 `head -n1|cut -d ' ' -f3` 要两配合、`grep -oE 'via (\S+)` 会输出via、`ip r|sed 's/.*via (\S+).*/\1/;q' -r` 就更智障了

最后我不认换行，`ip r|cut -zd' ' -f3` 选其首格..

sh 的文化是 $() 和各种'' *!?边运行边确定参数个数，=JS+乱eval+仅str类型 ，想做点管道都极其麻烦
```
f=proxychains.conf; cat /etc/$f>$f; echo socks5 `ip r|cut -zd' ' -f3` 10808 >>$f; proxychains $0
```
