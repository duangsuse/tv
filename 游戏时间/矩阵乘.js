/*矩阵matrix 和 2D数组,网格grid 不同，它是线性方程组系数变量构成的、主对角线是右下向的，其上常量+- 运算很普通但点乘法是麻烦的

矩阵 A(n*m) 表示其有 n行,每行有m个数,总n*m个；我们以 A[v] 指代一行、A[j=v] 指代一列

A=(1 2; 3 0) B=(4 5; 6 0) 则 A*B=(
  B[j=0]*A[0],*A[1]: 4 1+6 2, 4 3+6 0;
  B[j=1]*A[0],*A[1]: 5 1+0 2, 5 3+0 0
)=(16 12; 7 15)

序列式 C[i,j]=sum(A[i,k]*B[k,j] for k in 0..<n) 其中行i确定、 Bj 限制于 An 范围内

我们可以关注下B的列号0，它与A的两行相乘是结果C行0的两数
*/
A=[1,2,3,0],B=[4,5,6,0]
A.m=B.m=2//列数

点乘=(a,b)=>{
  let n=b.length/b.m, m=a.m, c=Array(m*n), //形状和a类似
    和积=(j,xs)=>{let ac=0, i=0,N=xs.length; for(;i<N;i++)ac+=xs[i]*b[i*b.m+j]; return ac}
  for(let j=0;j<b.m;j++) for(let i=0,N=a.length/m;i<N;i++) c[j*m+i]=和积(j,a.slice(i,i+m) )
  return c
}
C=点乘(A,B)
/*
 若把 A 转90度置、行逆序
 AT=(3 1; 0 2)
 A1=(1 3; 2 0) B=(4 5; 6 0)
 则直接将 B[0];B[1] 与 A[0],A[1] 二者相乘可得各项值

 有 2x2 矩阵，化为4横行
行1,2与行a,b 乘得 C00,C1 1
行2,1与行a,b 乘得 C01,C1 2%2
 */
