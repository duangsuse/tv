你们眼里啊黑箱了不得的二进制和C，在那些写DOS时代、GBA掌机应用的人眼里啊啥都不是，人家直接手控不需goto,struct 还有啥call。又只要用户的电脑去解释又要解释保真，怎么可能呢你动动脑去想，你怕是还没看过树形文本外的代码形式，高大编码上都是抄的、试错出的吧

几块0和1交并反滑，一个不能再普通的指针、状态机，这种程度你和 wannacry 作者是一个水平，因为迷信这些什么“保护”，它就只是快，还什么安全，完全是不了解虚拟内存空间、进程状态，才会觉得哇好安全啊

有空研究下咋把那不温不火几百行代码几个小判断，缩短点具定义力点成不，好好看看你那几千行的项目分成三个模块后真正业务的有几行，有几百行是其它项目也有的环境配置和无效文档

就是因为Lua又比Py内嵌性强，又暴露vm,luac能 eval 
那你是C程序员，改文件头，改指令号安全不？
luaY_parse 会生成这块函数，只要 liblua 有正确 dostring 的能力，同份源码 luac把 int32 opcodes[] 里指令号的5位和正版的建对应表，补丁改版的块里的就行

那我不含 luaX,Y 和Z的一部分你不就猜不出了？

luaV_execute 的大 switch 您切得开吗？您觉得找 call ，自动匹配头部汇编 op[i]=ohead[call[i].head] 确定对应关系很难吗？

那我直接用定制版 lua ，那你能修改指令对 lua_State 的影响吗？按指令号间pc+n类转移和原版匹配，到这种程度已经是虚拟机壳了，自己掌握程序码解释，但自己也能被解释

用户空间的程序能观察 Ring1 级吗？内核是不站在弱智的猫鼠游戏上的，也没有API会配合你们惰性/上下文解包加密的资源，这也就证明了为什么CSGO那么知名也逃不过显卡驱动挂，那我啥数据不要，单靠 CV 根据 VGA 线 MITM 的像素图自瞄，这是你能控制的吗？Ring0 都查不到，控制欲那么强。

你比用户懂计算机，他们是小白你大佬，你多了不起啊

我举个例子，字串常量加密，就是重编码吧。
把 "ab" 换成 decrypt("") ，它会利用调用方的函数名先加密，厉害吧？
给它加个输入输出缓存，程序结束我们去掉其call,把参数常量号的内容换回来。
C用 frida.re hook 掉这个，缓存体都是JS写
那我内联这个 decrypt 成不？更简单了，把其一的算法逆向出，其它全部用 RegExp 替换 smali,或指令序列 把输出变量换成已解码，就是你不会懂「模式」而已

横眉冷对千夫指，俯首甘为孺子牛；现在的应用系程序员，闹够了没有？360壳充电屏保忘了？裁剪重命名的混淆还不够吗？如果不够，就根本无安全可言！认真对待界面交互。你不该吗？
